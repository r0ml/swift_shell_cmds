
// Generated by Robert M. Lefkowitz <r0ml@liberally.net> in 2024
// from a file containing the following notice:

/*
  Copyright (c) June 1996 Wolfram Schneider <wosch@FreeBSD.org>. Berlin.
  All rights reserved.
 
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions
  are met:
  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
 
  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  SUCH DAMAGE.
*/

import ShellTesting

class testTests : ShellTest {
    let cmd = "test"
  let suite = "shell_cmds_testTest"
  
  func t(_ a : Int, _ b : String) async throws {
    try await run(status: a, args: b.components(separatedBy: " ").filter { !$0.isEmpty} )
  }

  func t(_ a : Int, _ b : [String]) async throws {
    try await run(status: a, args: b)
  }
  
  @Test func test001() async throws { try await t(0, "b = b") }
  @Test func test002() async throws { try await t(0, "b == b") }
  @Test func test003() async throws { try await t(1, "b != b") }
  @Test func test004() async throws { try await t(0, "( b = b )") }
  @Test func test005() async throws { try await t(0, "( b == b )") }
  @Test func test006() async throws { try await t(1, "! ( b = b )") }
  @Test func test007() async throws { try await t(1, "! ( b == b )") }
  @Test func test008() async throws { try await t(1, "! -f /etc/passwd") }
  @Test func test009() async throws { try await t(0, "-h = -h") }
  @Test func test010() async throws { try await t(0, "-o = -o") }

  @Test func test011() async throws { try await t(1, "-f = h") }
  @Test func test012() async throws { try await t(1, "-h = f") }
  @Test func test013() async throws { try await t(1, "-o = f") }
  @Test func test014() async throws { try await t(1, "f = -o") }
  @Test func test015() async throws { try await t(0, "( -h = -h )") }
  @Test func test016() async throws { try await t(1, "( a = -h )") }
  @Test func test017() async throws { try await t(1, "( -f = h )") }
  @Test func test018() async throws { try await t(0, "-h = -h -o a") }
  @Test func test019() async throws { try await t(0, "( -h = -h ) -o 1") }
  @Test func test020() async throws { try await t(0, "-h = -h -o -h = -h") }
  
  @Test func test021() async throws { try await t(0, "( -h = -h ) -o ( -h = -h )") }
  @Test func test022() async throws { try await t(0, "roedelheim = roedelheim") }
  @Test func test023() async throws { try await t(1, "potsdam = berlin-dahlem") }
  @Test func test024() async throws { try await t(0, "-d /") }
  @Test func test025() async throws { try await t(0, "-d / -a a != b") }
  @Test func test026() async throws { try await t(1, ["-z", "-z"] ) }
  @Test func test027() async throws { try await t(0, "-n -n") }
  @Test func test028() async throws { try await t(0, "0") }
  @Test func test029() async throws { try await t(0, "( 0 )") }
  @Test func test030() async throws { try await t(0, "-E") }
  
  @Test func test031() async throws { try await t(0, "-X -a -X") }
  @Test func test032() async throws { try await t(0, "-XXX") }
  @Test func test033() async throws { try await t(0, "( -E )") }
  @Test func test034() async throws { try await t(0, "true -o X") }
  @Test func test035() async throws { try await t(0, "true -o -X") }
  @Test func test036() async throws { try await t(0, "( ( ( a = a ) -o 1 ) -a 1 ) -a true") }
  @Test func test037() async throws { try await t(1, "-h /") }
  @Test func test038() async throws { try await t(0, "-r /") }
  @Test func test039() async throws { try await t(1, "-w /") }
  @Test func test040() async throws { try await t(0, "-x /bin/sh") }
  
  @Test func test041() async throws { try await t(0, "-c /dev/null") }
  @Test func test042() async throws { try await t(0, "-f /etc/passwd") }
  @Test func test043() async throws { try await t(0, "-s /etc/passwd") }
  @Test func test044() async throws { try await t(1, "! ( 700 -le 1000 -a -n \"1\" -a \"20\" = \"20\" )") }
  @Test func test045() async throws { try await t(0, "100 -eq 100") }
  @Test func test046() async throws { try await t(0, "100 -lt 200") }
  @Test func test047() async throws { try await t(1, "1000 -lt 200") }
  @Test func test048() async throws { try await t(0, "1000 -gt 200") }
  @Test func test049() async throws { try await t(0, "1000 -ge 200") }
  @Test func test050() async throws { try await t(0, "1000 -ge 1000") }
  
  @Test func test051() async throws { try await t(1, "2 -ne 2") }
  @Test func test052() async throws { try await t(0, "0 -eq 0" ) }
  @Test func test053() async throws { try await t(1, "-5 -eq 5" ) }
  @Test func test054() async throws { try await t(0, "( 0 -eq 0 )") }
  @Test func test055() async throws { try await t(1, "1 -eq 0 -o a = a -a 1 -eq 0 -o a = aa") }
  @Test func test056() async throws { try await t(1, ["","-o",""] ) }
  @Test func test057() async throws { try await t(1, ["","-a",""] ) }
  @Test func test058() async throws { try await t(1, ["a", "-a", ""] ) }
  @Test func test059() async throws { try await t(0, ["a", "-a", "!", ""] ) }
  @Test func test060() async throws { try await t(1, [""] ) }
  
  @Test func test061() async throws { try await t(0, ["!", ""] ) }
  @Test func test062() async throws { try await t(0, "!" ) }
  @Test func test063() async throws { try await t(0, "(" ) }
  @Test func test064() async throws { try await t(0, ")") }
  @Test func test065() async throws { try await t(1, "( = )") }
  @Test func test066() async throws { try await t(0, "( != )") }
  @Test func test067() async throws { try await t(0, "( ! )") }
  @Test func test068() async throws { try await t(0, "( ( )" ) }
  @Test func test069() async throws { try await t(0, "( ) )") }
  @Test func test070() async throws { try await t(0, "! = !") }

  @Test func test071() async throws { try await t(1, "! != !") }
  @Test func test072() async throws { try await t(1, "-n = )") }
  @Test func test073() async throws { try await t(0, "! != )" ) }
  @Test func test074() async throws { try await t(1, "! = a" ) }
  @Test func test075() async throws { try await t(0, "! != -n" ) }
  @Test func test076() async throws { try await t(0, "! -c /etc/passwd") }
  @Test func test077() async throws { try await t(1, "! = = =") }
  @Test func test078() async throws { try await t(0, "! = = )") }
  @Test func test079() async throws { try await t(0, ["!", "", "-o", ""] ) }
  @Test func test080() async throws { try await t(1, ["!", "x", "-o", ""] ) }

  @Test func test081() async throws { try await t(1, ["!", "", "-o", "x"] ) }
  @Test func test082() async throws { try await t(1, "! x -o x" ) }
  @Test func test083() async throws { try await t(0, "( -f /etc/passwd )" ) }
  @Test func test084() async throws { try await t(0, ["(", "!", "", ")"] ) }
  @Test func test085() async throws { try await t(1, "( ! -e )" ) }
  @Test func test086() async throws { try await t(0, "0 -eq 0 -a -d /") }
  @Test func test087() async throws { try await t(0, ["-s", "=", "", "-o", "", "=", ""] ) }
  @Test func test088() async throws { try await t(0, ["", "=", "", "-o", "-s", "=", ""] ) }
  @Test func test089() async throws { try await t(1, ["-s", "=", "", "-o", "-s", "=", ""] ) }
  @Test func test090() async throws { try await t(0, "-z x -o x = # -o x = x") }

  @Test func test091() async throws { try await t(1, "-z y -o y = # -o y = x") }
  @Test func test092() async throws { try await t(0, "0 -ne 0 -o ! -f /" ) }
  @Test func test093() async throws { try await t(0, "1 -ne 0 -o ! -f /etc/passwd" ) }
  @Test func test094() async throws { try await t(1, "0 -ne 0 -o ! -f /etc/passwd" ) }
  @Test func test095() async throws { try await t(0, "-n =") }
  @Test func test096() async throws { try await t(1, "-z =") }
  @Test func test097() async throws { try await t(1, "! =") }
  @Test func test098() async throws { try await t(0, "-n -eq") }
  @Test func test099() async throws { try await t(1, "-z -eq") }
  @Test func test100() async throws { try await t(1, "! -eq") }

  @Test func test101() async throws { try await t(0, "-n -a") }
  @Test func test102() async throws { try await t(1, "-z -a" ) }
  @Test func test103() async throws { try await t(1, "! -a" ) }
  @Test func test104() async throws { try await t(0, "-n -o" ) }
  @Test func test105() async throws { try await t(1, "-z -o" ) }
  @Test func test106() async throws { try await t(1, "! -o") }
  @Test func test107() async throws { try await t(1, "! -n =") }
  @Test func test108() async throws { try await t(0, "! -z =") }
  @Test func test109() async throws { try await t(0, "! ! =") }
  @Test func test110() async throws { try await t(1, "! -n -eq") }

  @Test func test111() async throws { try await t(0, "! -z -eq") }
  @Test func test112() async throws { try await t(0, "! ! -eq" ) }
  @Test func test113() async throws { try await t(1, "! -n -a" ) }
  @Test func test114() async throws { try await t(0, "! -z -a" ) }
  @Test func test115() async throws { try await t(0, "! ! -a") }
  @Test func test116() async throws { try await t(1, "! -n -o") }
  @Test func test117() async throws { try await t(0, "! -z -o") }
  @Test func test118() async throws { try await t(0, "! ! -o") }
  @Test func test119() async throws { try await t(0, "( -n = )") }
  @Test func test120() async throws { try await t(1, "( -z = )") }

  @Test func test121() async throws { try await t(1, "( ! = )") }
  @Test func test122() async throws { try await t(0, "( -n -eq )" ) }
  @Test func test123() async throws { try await t(1, "( -z -eq )" ) }
  @Test func test124() async throws { try await t(1, "( ! -eq )" ) }
  @Test func test125() async throws { try await t(0, "( -n -a )") }
  @Test func test126() async throws { try await t(1, "( -z -a )") }
  @Test func test127() async throws { try await t(1, "( ! -a )") }
  @Test func test128() async throws { try await t(0, "( -n -o )") }
  @Test func test129() async throws { try await t(1, "( -z -o )") }
  @Test func test130() async throws { try await t(1, "( ! -o )") }
}
